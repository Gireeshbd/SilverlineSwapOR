{"ast":null,"code":"var _typeof = require(\"C:/Users/kiran/Documents/silverlineswap-main/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.error.to-string.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + _typeof(str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n};","map":{"version":3,"names":["module","exports","isHexPrefixed","str","Error","slice"],"sources":["C:/Users/kiran/Documents/silverlineswap-main/node_modules/is-hex-prefixed/src/index.js"],"sourcesContent":["/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EAC3C,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,8EAA8ED,GAA9E,IAAqF,iCAA/F,CAAN;EACD;;EAED,OAAOA,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAa,CAAb,MAAoB,IAA3B;AACD,CAND"},"metadata":{},"sourceType":"script"}