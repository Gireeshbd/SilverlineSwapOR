{"ast":null,"code":"var _typeof = require(\"C:/Users/kiran/Documents/silverlineswap-main/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.error.to-string.js\");\n\nrequire(\"core-js/modules/es.array.is-array.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.date.to-string.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.date.to-json.js\");\n\nrequire(\"core-js/modules/web.url.to-json.js\");\n\nrequire(\"core-js/modules/es.math.clz32.js\");\n\nrequire(\"core-js/modules/es.string.sub.js\");\n\nrequire(\"core-js/modules/es.math.imul.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (_typeof(module) === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (_typeof(number) === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this._strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // '0' - '9'\n\n    if (c >= 48 && c <= 57) {\n      return c - 48; // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        b = c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move(dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move(dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  }; // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol[\"for\"] === 'function') {\n    try {\n      BN.prototype[Symbol[\"for\"]('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q._strip();\n    }\n\n    a._strip(); // Denormalize\n\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  }; // WARNING: DEPRECATED\n\n\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","window","require","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","_strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","b","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","move","src","_move","clone","_expand","size","strip","_normSign","Symbol","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","FFTM","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","undefined","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u"],"sources":["C:/Users/kiran/Documents/silverlineswap-main/node_modules/rlp/node_modules/bn.js/lib/bn.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}